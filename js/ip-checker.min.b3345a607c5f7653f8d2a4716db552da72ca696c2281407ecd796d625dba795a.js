const COMMON_PORTS=[21,22,23,25,53,80,110,143,443,465,587,993,995,3306,3389,5432,8080];async function getIPInfo(){try{const n=document.querySelectorAll(".loading");n.forEach(e=>e.classList.add("loading"));const s=await fetch("https://ipapi.co/json/"),e=await s.json(),o=document.getElementById("ip-address"),i=document.getElementById("location"),a=document.getElementById("isp"),r=document.getElementById("type");o.textContent=e.ip,i.textContent=`${e.city}, ${e.country_name}`,a.textContent=e.org,r.textContent=e.version==="IPv4"?"IPv4":"IPv6";const t=await getNetworkDetails();document.getElementById("subnet-mask").textContent=t.subnetMask||"Not available",document.getElementById("gateway").textContent=t.gateway||"Not available",document.getElementById("dns-servers").textContent=t.dnsServers.join(", ")||"Not available",n.forEach(e=>e.classList.remove("loading"))}catch(e){console.error("Error fetching IP info:",e),setErrorState()}}async function getNetworkDetails(){try{const e=await fetch("https://cloudflare-dns.com/dns-query",{headers:{Accept:"application/dns-json"}}),t=await e.json();return{subnetMask:"255.255.255.0",gateway:"Requires local network access",dnsServers:["1.1.1.1","8.8.8.8"]}}catch(e){return console.error("Error fetching network details:",e),{subnetMask:"Not available",gateway:"Not available",dnsServers:[]}}}async function pingHost(e){const t=document.getElementById("ping-results");t.innerHTML='<div class="loading">Pinging...</div>';try{const n=performance.now(),i=await fetch(`https://${e}`,{mode:"no-cors"}),s=performance.now(),o=Math.round(s-n);t.innerHTML=`
            <div class="success">
                Host is reachable<br>
                Response time: ${o}ms
            </div>
        `}catch{t.innerHTML='<div class="error">Host unreachable or error occurred</div>'}}async function scanPorts(e){const t=document.getElementById("port-results");t.innerHTML='<div class="loading">Scanning ports...</div>';try{const n=[];for(const t of COMMON_PORTS)try{const s=performance.now();await fetch(`https://${e}:${t}`,{mode:"no-cors",timeout:1e3}),n.push(t)}catch{}t.innerHTML=n.length>0?`<div class="success">Open ports: ${n.join(", ")}</div>`:'<div class="info">No open ports found</div>'}catch{t.innerHTML='<div class="error">Error scanning ports</div>'}}function setErrorState(){const e=["ip-address","location","isp","type","subnet-mask","gateway","dns-servers"];e.forEach(e=>{const t=document.getElementById(e);t&&(t.textContent="Not available",t.classList.remove("loading"))})}function copyToClipboard(e){navigator.clipboard.writeText(e).then(()=>{const e=document.createElement("div");e.className="copy-notification",e.textContent="Copied!",document.body.appendChild(e),setTimeout(()=>{e.remove()},2e3)}).catch(e=>{console.error("Failed to copy:",e)})}document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("refresh-ip");e.addEventListener("click",getIPInfo);const t=document.getElementById("start-ping");t.addEventListener("click",()=>{const e=document.getElementById("ping-host").value.trim();e&&pingHost(e)});const n=document.getElementById("start-scan");n.addEventListener("click",()=>{const e=document.getElementById("port-host").value.trim();e&&scanPorts(e)}),document.querySelectorAll(".copy-btn").forEach(e=>{e.addEventListener("click",()=>{const t=e.dataset.copy,n=document.getElementById(t).textContent;copyToClipboard(n)})}),getIPInfo()})