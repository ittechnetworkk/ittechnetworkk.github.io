<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ospf on ittechnetworkk</title>
    <link>https://ittechnetworkk.github.io/tags/ospf/</link>
    <description>Recent content in Ospf on ittechnetworkk</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <copyright>ittechnetworkk</copyright>
    <lastBuildDate>Sun, 07 Apr 2024 22:57:40 +0100</lastBuildDate>
    <atom:link href="https://ittechnetworkk.github.io/tags/ospf/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>OSPF LAB</title>
      <link>https://ittechnetworkk.github.io/posts/ospflab/ospf-lab/</link>
      <pubDate>Sun, 07 Apr 2024 22:57:40 +0100</pubDate>
      <guid>https://ittechnetworkk.github.io/posts/ospflab/ospf-lab/</guid>
      <description>&lt;p&gt;Bu Lab’daki amacım OSPF’in genel bir tekrarını yapmak olacak. Komutları uzun uzun yazıyor olacağım.&lt;/p&gt;&#xA;&lt;p&gt;Aşağıdaki topolojiyi uygulayacağım.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://ittechnetworkk.github.io/images/OSPFLAB/1.png&#34; alt=&#34;ospf&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Bu Lab&amp;rsquo;da istenilenler topolojinin sol üst köşesinde yazıyor.&lt;/p&gt;&#xA;&lt;p&gt;Buna göre;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;1- İlk olarak router interfacelerine ve VPC&amp;rsquo;lere sırasıyla IP&amp;rsquo;lerini vererek başlıyorum.&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;R1:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;R1#configure terminal &#xA;R1(config)#int e0/0&#xA;R1(config-if)#ip addr 10.0.1.1 255.255.255.0&#xA;R1(config-if)#no sh&#xA;R1(config-if)#int e0/1&#xA;R1(config-if)#ip address 10.0.3.1 255.255.255.0&#xA;R1(config-if)#no sh&#xA;R1(config-if)#int e0/2&#xA;R1(config-if)#ip addr 10.0.4.1 255.255.255.0&#xA;R1(config-if)#no sh&#xA;R1(config-if)#int e0/3&#xA;R1(config-if)#ip addr 10.0.2.1 255.255.255.0&#xA;R1(config-if)#no sh&#xA;R1(config-if)#int e1/0&#xA;R1(config-if)#ip addr 10.0.0.1 255.255.255.0&#xA;R1(config-if)#no sh&#xA;R1(config-if)#exit&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;R2:&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>OSPF Authentication</title>
      <link>https://ittechnetworkk.github.io/posts/ospfauthentication/ospf-authentication/</link>
      <pubDate>Sun, 31 Mar 2024 22:57:40 +0100</pubDate>
      <guid>https://ittechnetworkk.github.io/posts/ospfauthentication/ospf-authentication/</guid>
      <description>&lt;p&gt;OSPF Authentication, OSPF network trafiğinin güvenliğini artırmak amacıyla kullanılır.&#xA;3 Çeşit doğrulama yöntemi vardır;&lt;/p&gt;&#xA;&lt;p&gt;1- Plain Text Authentication,&lt;/p&gt;&#xA;&lt;p&gt;2- MD5 Authentication,&lt;/p&gt;&#xA;&lt;p&gt;3- SHA-HMAC Authentication (IOS 15.4 ve sonrası versiyonlar için)&lt;/p&gt;&#xA;&lt;p&gt;Aşağıdaki topolojiyi uygulayacağız.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://ittechnetworkk.github.io/images/ospf-authentication/1.png&#34; alt=&#34;ospf&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Bu topolojide 3 Authentication metodunu da uygulayacağız.&lt;/p&gt;&#xA;&lt;p&gt;R1 ve R3 arasında Plain Text Authentication (Area 1),&lt;/p&gt;&#xA;&lt;p&gt;R1 ve R2 arasında MD5 Authentication (Area 0),&lt;/p&gt;&#xA;&lt;p&gt;R2 ve R4 arasında SHA-HMAC Authentication yapacağız. (Area 2)&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;1- Interfacelere IP vererek başlayalım:&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>OSPF Konfigürasyonu</title>
      <link>https://ittechnetworkk.github.io/posts/ospfconfiguration/ospf-configuration/</link>
      <pubDate>Sun, 31 Mar 2024 22:57:40 +0100</pubDate>
      <guid>https://ittechnetworkk.github.io/posts/ospfconfiguration/ospf-configuration/</guid>
      <description>&lt;p&gt;OSPF (Open Short Path First), dinamik bir yönlendirme protokolüdür. OSPF bir Link State Routing protokolüdür. Bundan dolayı network haritasının tamamına hakimdir Bazı özellikleri şöyledir:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Açık kaynaklıdır,&lt;/li&gt;&#xA;&lt;li&gt;SPF(Shortest Path First) algoritmasını kullanır,&lt;/li&gt;&#xA;&lt;li&gt;Classless (Sınıfsız) bir protokoldür,&lt;/li&gt;&#xA;&lt;li&gt;CIDR (Classless Inter-Domain Routing), VLSM(Veriable Length Subnet Masking) destekler,&lt;/li&gt;&#xA;&lt;li&gt;Load balancing destekler,&lt;/li&gt;&#xA;&lt;li&gt;Güncelleme süresi hızlıdır,&lt;/li&gt;&#xA;&lt;li&gt;Administrative Distance değeri 110&amp;rsquo;dur,&lt;/li&gt;&#xA;&lt;li&gt;Area yapısı ile ölçeklenebilir,&lt;/li&gt;&#xA;&lt;li&gt;Kimlik doğrulamayı destekler (MD5)&lt;/li&gt;&#xA;&lt;li&gt;Metrik değeri olarak Cost kullanır.&lt;/li&gt;&#xA;&lt;li&gt;Multicast 224.0.0.5 ve 224.0.0.6 adreslerinden yayın yapar.&lt;/li&gt;&#xA;&lt;li&gt;89 portunu kullanır.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;OSPF Paket Tipleri:&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
