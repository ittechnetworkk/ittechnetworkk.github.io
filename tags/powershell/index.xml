<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Powershell on ittechnetworkk</title><link>https://ittechnetworkk.github.io/tags/powershell/</link><description>Recent content in Powershell on ittechnetworkk</description><generator>Hugo</generator><language>en-us</language><copyright>ittechnetworkk</copyright><lastBuildDate>Sat, 05 Jul 2025 13:40:46 +0200</lastBuildDate><atom:link href="https://ittechnetworkk.github.io/tags/powershell/index.xml" rel="self" type="application/rss+xml"/><item><title>Malicious PowerShell Analysis</title><link>https://ittechnetworkk.github.io/walkthroughs/maliciouspowershellanalysis/</link><pubDate>Sat, 05 Jul 2025 13:40:46 +0200</pubDate><guid>https://ittechnetworkk.github.io/walkthroughs/maliciouspowershellanalysis/</guid><description>&lt;p>In this write-up, I’ll be investigating a challenge named &lt;a href="https://blueteamlabs.online/home/challenge/malicious-powershell-analysis-bf6b52faef">&lt;strong>Malicious PowerShell Analysis&lt;/strong>&lt;/a> from Blue Team Labs Online. This challenge isn’t particularly difficult, making it a great exercise for learning or sharpening malware analysis skills.&lt;/p>
&lt;h3 id="-step-1-downloading-the-file">🧪 &lt;strong>Step 1: Downloading the File&lt;/strong>&lt;/h3>
&lt;p>First, I downloaded the malicious file to an isolated analysis environment (virtual machine).&lt;/p>
&lt;p>The file came as an encrypted ZIP archive named:&lt;/p>
&lt;p>&lt;img src="https://ittechnetworkk.github.io/images/Walkthroughs/MaliciousPowershellAnalysis/1.png" alt="maliciousPowershellAnalysis">&lt;/p>
&lt;h3 id="-step-2-hash-analysis">🔍 &lt;strong>Step 2: Hash Analysis&lt;/strong>&lt;/h3>
&lt;p>To begin the investigation, I calculated the file’s MD5 hash using &lt;code>md5sum&lt;/code>, then submitted it to multiple threat intelligence platforms:&lt;/p></description></item></channel></rss>