<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Linux on ittechnetworkk</title><link>https://ittechnetworkk.github.io/tags/linux/</link><description>Recent content in Linux on ittechnetworkk</description><generator>Hugo</generator><language>en-us</language><copyright>ittechnetworkk</copyright><lastBuildDate>Sat, 19 Jul 2025 14:37:10 +0200</lastBuildDate><atom:link href="https://ittechnetworkk.github.io/tags/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>Cacti Installation</title><link>https://ittechnetworkk.github.io/posts/cacti/cacti-install/</link><pubDate>Sat, 19 Jul 2025 14:37:10 +0200</pubDate><guid>https://ittechnetworkk.github.io/posts/cacti/cacti-install/</guid><description>&lt;p>Merhabalar, bu yazımda Cacti Monitoring yazılımını Rasperry pi Zero&amp;rsquo;ya kurulumunu göstereceğim.&lt;/p>
&lt;p>&lt;a href="https://github.com/Cacti/cacti">Cacti&lt;/a>, açık kaynak kodlu bir network monitoring yazılımıdır.&lt;/p>
&lt;p>Ben Raspberry Pi Zero&amp;rsquo;ya kuracağım,&lt;/p>
&lt;p>Başlayalım.&lt;/p>
&lt;p>Kullandığım donanım ve yazılımlar:&lt;/p>
&lt;ul>
&lt;li>Raspberry Pi Zero 2W,&lt;/li>
&lt;li>SD Kart,&lt;/li>
&lt;li>Kart Okuyucu,&lt;/li>
&lt;li>Raspberry Pi Güç Kablosu,&lt;/li>
&lt;li>ImagerPi&lt;/li>
&lt;/ul>
&lt;p>İlk olarak ImagerPi kullanarak SD Kart&amp;rsquo;a Raspbian işletim sistemini kuruyorum.&lt;/p>
&lt;p>&lt;img src="https://ittechnetworkk.github.io/images/Cacti/1.png" alt="cacti">&lt;/p>
&lt;p>Yazdırma işlemi bittikten sonra, SD Kart&amp;rsquo;ı cihaza takıp güç kablosunu modemin usb portuna bağlıyorum (güncellemeleri ve kurulumları daha hızlı yapabilmek için).&lt;/p></description></item><item><title>Docker Notlarım</title><link>https://ittechnetworkk.github.io/posts/dockernotlarim/docker-notlarim/</link><pubDate>Sat, 08 Feb 2025 21:46:11 +0100</pubDate><guid>https://ittechnetworkk.github.io/posts/dockernotlarim/docker-notlarim/</guid><description>&lt;p>Docker&amp;rsquo;a giriş notlarım. Bu notlar Özgür Öztürk&amp;rsquo;ün Docker Eğitiminden aldığım notlarımdır.&lt;/p>
&lt;pre tabindex="0">&lt;code>#Container oluşturulduktan sonra date uygulaması çalıştırılacak. Container başka bir uygulama ile başlatılacak.
docker container run --name deneme httpd date

#Container&amp;#39;i arka planda çalıştırmak için
docker container run -d deneme2

#Container içerisinde komut çalıştırmak için &amp;#34;exec&amp;#34;
docker container exec 94ef4e4f89 ls

#Çalışan container&amp;#39;a nasıl bağlanılır
docker container exec -it deneme1 sh

#Bir sanal makine ile Container&amp;#39;in farkı; Container&amp;#39;de kernel yoktur, üzerinde çalıştığı hostun kernel&amp;#39;ini kullanır.

#Container ile ilgili daha fazla bilgi edinmek için
docker container inspect deneme1
docker network inspect bridge
docker image inspect fedora

#Container&amp;#39;a bağlanıp değişiklik yapılması pek önerilmez. Bazılarına bağlanılmaz bile.

#Container loglarına bakmak için
docker container logs deneme1

#Container loglarını zaman damgalarıyla göstermek için
docker container logs -t deneme1

#Container loglarındaki son birkaç satırı görmek için
docker container logs --tail 5 deneme1

#Container loglarını canlı görmek için 
docker container logs -f deneme1

#Container&amp;#39;ın kaynaklarına bakmak için
docker container top webserver
docker container stats webserver
docker stats 

#Container&amp;#39;ları sınırlamadığımız sürece host makinedeki kaynakları sınırsız kullanabilir.
Bu container&amp;#39;ların kaynaklarını kısıtlayabiliriz.
#Container&amp;#39;ın memory kısıtlaması için
docker container run -d --name deneme3 --memory=1G httpd
docker container run -d --name deneme3 --memory=500K httpd

#CPU kısıtlaması için iki yol vardır
#Container sadece 1 core kullanabilecek random olarak
docker run -d --name cpukisit --cpus=&amp;#34;1&amp;#34; httpd

#Container 2 ve 8 nolu core&amp;#39;ları kullanabilecek
docker container run -d --name cpukisit2 --cpuset-cpus=&amp;#34;2,8&amp;#34; httpd

#Container&amp;#39;de swap belirlemek için
docker run -d --name swap --memory-swap=1G httpd

#Tüm containerları topluca silmek için
docker container prune
&lt;/code>&lt;/pre>&lt;p>&lt;img src="https://ittechnetworkk.github.io/images/Docker/1.png" alt="docker">&lt;/p></description></item><item><title>[EN] NetworkManager Installation</title><link>https://ittechnetworkk.github.io/posts/networkmanagerinstallation/network-manager-installation/</link><pubDate>Fri, 24 Jan 2025 21:46:46 +0100</pubDate><guid>https://ittechnetworkk.github.io/posts/networkmanagerinstallation/network-manager-installation/</guid><description>&lt;p>Hi there, in this article, I will show you how to switch &lt;code>netplan&lt;/code> to &lt;code>NetworkManager&lt;/code> to manage network interfaces on Ubuntu.&lt;/p>
&lt;p>As you know, Ubuntu uses netplan as the default tool for network management. However NetworkManager is often a better choice due to its advanced features and ease of use.&lt;/p>
&lt;p>In this guide, I’ll walk you through the steps to install and configure NetworkManager on an Ubuntu Server.&lt;/p>
&lt;p>&lt;strong>Step 1: Install NetworkManager&lt;/strong>&lt;/p></description></item><item><title>Debian Server IP Konfigürasyonu</title><link>https://ittechnetworkk.github.io/posts/debianip/debian-ip/</link><pubDate>Sun, 19 Jan 2025 23:56:33 +0100</pubDate><guid>https://ittechnetworkk.github.io/posts/debianip/debian-ip/</guid><description>&lt;p>Selamlar, bu yazımda Debian Server&amp;rsquo;a nasıl statik veya dinamik IP tanımlanacağını göstereceğim.&lt;/p>
&lt;p>Her Linux dağıtımında statik IP&amp;rsquo;ler aynı şekilde tanımlanmayabilir.&lt;/p>
&lt;p>Linux sistemlerde her şey bir dosyadan okunduğu için bunun için de bir ilgili bir dosya vardır.&lt;/p>
&lt;p>Debian&amp;rsquo;da bu dosya şuradadır:&lt;/p>
&lt;ul>
&lt;li>/etc/network/interfaces&lt;/li>
&lt;/ul>
&lt;p>Şimdi bu dosyayı editleyelim.&lt;/p>
&lt;p>Dosyanın ilk hali şu şekildedir:&lt;/p>
&lt;pre tabindex="0">&lt;code># This file describes the network interfaces available on your system
# and how to activate them. For more information, see interfaces(5).

source /etc/network/interfaces.d/*

# The loopback network interface
auto lo
iface lo inet loopback
&lt;/code>&lt;/pre>&lt;p>Bazı parametreler sisteminize bağlı olarak değişiklik gösterebilir.&lt;/p></description></item><item><title>Fedora Server IP Konfigürasyonu</title><link>https://ittechnetworkk.github.io/posts/fedoraip/fedora-ip/</link><pubDate>Sun, 19 Jan 2025 22:51:26 +0100</pubDate><guid>https://ittechnetworkk.github.io/posts/fedoraip/fedora-ip/</guid><description>&lt;p>Selamlar, bu yazımda Fedora Server&amp;rsquo;a nasıl statik veya dinamik IP tanımlanacağını göstereceğim.&lt;/p>
&lt;p>Her Linux dağıtımında statik IP&amp;rsquo;ler aynı şekilde tanımlanmayabilir. Fakat mantığını bilmek bir adım önde başlamak demektir.&lt;/p>
&lt;p>Linux sistemlerde her şey bir dosyadan okunduğu için bunun için de bir ilgili bir dosya vardır.&lt;/p>
&lt;p>Fedora&amp;rsquo;da bu dosya şuradadır:&lt;/p>
&lt;p>NetworkManager kullanılmadığında;&lt;/p>
&lt;ul>
&lt;li>/etc/sysconfig/network-scripts/ifcfg-ens33&lt;/li>
&lt;/ul>
&lt;p>NetworkManager kullanıldığında;&lt;/p>
&lt;ul>
&lt;li>/etc/NetworkManager/system-connections/ens33.nmconnection&lt;/li>
&lt;/ul>
&lt;p>Şimdi bu dosyayı editleyelim.&lt;/p>
&lt;p>Dosyanın ilk hali şu şekildedir:&lt;/p>
&lt;pre tabindex="0">&lt;code>[connection]
id=ens160
uuid=36903561-eb7f-38c2-986b-b098913248de
type=ethernet
autoconnect-priority=-999
interface-name=ens160
timestamp=1737213877

[ethernet]

[ipv4]


[ipv6]
addr-gen-mode=eui64
method=auto

[proxy]
&lt;/code>&lt;/pre>&lt;p>Bazı parametreler sisteminize bağlı olarak değişiklik gösterebilir, fakat bizim ilgilendiğimiz kısım şimdilik &lt;code>[ipv4]&lt;/code> kısmı.&lt;/p></description></item><item><title>[EN] Linux Process Prioritization</title><link>https://ittechnetworkk.github.io/posts/linuxprocessprioritization/linux-process-prioritization/</link><pubDate>Sat, 11 Jan 2025 05:03:17 +0100</pubDate><guid>https://ittechnetworkk.github.io/posts/linuxprocessprioritization/linux-process-prioritization/</guid><description>&lt;p>In this article I am going to talk about Linux process Prioritization.&lt;/p>
&lt;p>Sometimes we may want to prioritize our more important processes in Linux.&lt;/p>
&lt;p>We prioritize process or processes that are more important for us with &amp;ldquo;NICE&amp;rdquo; parameters.&lt;/p>
&lt;p>Each process has a &amp;ldquo;NICE&amp;rdquo; value. This value prioritizes processes.&lt;/p>
&lt;p>The lower we set this value, the higher the priority of the process. However, this value can only be set between &amp;ldquo;+20&amp;rdquo; and &amp;ldquo;-20&amp;rdquo;.&lt;/p></description></item><item><title>Ubuntu 22.04 DHCP Server Konfigürasyonu</title><link>https://ittechnetworkk.github.io/posts/ubuntudhcpserver/ubuntu-dhcp-server/</link><pubDate>Thu, 07 Nov 2024 22:57:40 +0100</pubDate><guid>https://ittechnetworkk.github.io/posts/ubuntudhcpserver/ubuntu-dhcp-server/</guid><description>&lt;p>Merhabalar bu yazımda, Ubuntu-22.04 Server&amp;rsquo;a DHCP rolü kurup konfigürasyonunu yapacağım.&lt;/p>
&lt;p>Ubuntu&amp;rsquo;ya DHCP rolü vermeden önce, Server&amp;rsquo;ın IP adresini statik olarak ayarlıyorum.&lt;/p>
&lt;p>Statik IP adresi tanımlamak için &amp;ldquo;/etc/netplan/00-installer-config.yaml&amp;rdquo; dosyasını düzenliyorum.&lt;/p>
&lt;pre tabindex="0">&lt;code>network:
  version: 2
  renderer: networkd
  ethernets:
    ens33:
      addresses:
        - 192.168.1.50/24
      nameservers:
        addresses: [1.1.1.1, 8.8.8.8]
      routes:
        - to: default
          via: 192.168.1.1
&lt;/code>&lt;/pre>&lt;p>Değişiklikleri geçerli kılmak için:&lt;/p>
&lt;pre tabindex="0">&lt;code>sudo netplan apply
&lt;/code>&lt;/pre>&lt;p>Grafik arayüzü ile yapılandırmak için &amp;ldquo;nmtui&amp;rdquo; aracını kullanabilirsiniz.&lt;/p>
&lt;p>DHCP Server Rolü Kurulumu:&lt;/p>
&lt;pre tabindex="0">&lt;code>sudo apt install isc-dhcp-server
&lt;/code>&lt;/pre>&lt;p>DHCP rolü yüklendikten sonra, konfigürasyon dosyası &amp;ldquo;/etc/dhcp/dhcpd.conf&amp;quot;dur.&lt;/p></description></item><item><title>GPG Nedir?</title><link>https://ittechnetworkk.github.io/posts/gpgnedir/gpg-nedir/</link><pubDate>Tue, 23 Jul 2024 22:57:40 +0100</pubDate><guid>https://ittechnetworkk.github.io/posts/gpgnedir/gpg-nedir/</guid><description>&lt;p>GPG (GNU Privacy Guard )&lt;a href="https://datatracker.ietf.org/doc/html/rfc4880">RFC4880&lt;/a> , GPL Lisanslı bir şifreleme ve imzalama aracıdır. Linux&amp;rsquo;da defaultta gelir, Windows için &lt;a href="https://www.gnupg.org/download/">Web Sitesi&lt;/a>&amp;rsquo;nden indirilebilir.&lt;/p>
&lt;p>GPG asimetrik şifreleme algoritması kullanır. Yani Public ve Prive anahtarlar vasıtasıyla dataları şifreler veya çözer.&lt;/p>
&lt;p>Nedir bu Public ve Prive anahtarlar?&lt;/p>
&lt;p>2 kişi düşünelim birbirleriyle haberleşmek istesin. Her kişinin 2 anahtarı olur. Biri &amp;ldquo;Public Key&amp;rdquo; yani paylaşılan anahtar. Diğeri ise &amp;ldquo;Private key&amp;rdquo; yani gizli kalması gereken anahtar.&lt;/p>
&lt;p>X kişisi Y kişisine gizli bir mesaj göndermek isterse bu mesajı Y kişisinin &amp;ldquo;Public Key&amp;quot;i ile şifrelemesi gerekir.&lt;/p></description></item></channel></rss>