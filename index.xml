<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ittechnetworkk</title>
    <link>https://ittechnetworkk.github.io/</link>
    <description>Recent content on ittechnetworkk</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <copyright>ittechnetworkk</copyright>
    <lastBuildDate>Thu, 05 Dec 2024 22:55:21 +0100</lastBuildDate>
    <atom:link href="https://ittechnetworkk.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>About</title>
      <link>https://ittechnetworkk.github.io/about/</link>
      <pubDate>Thu, 05 Dec 2024 22:55:21 +0100</pubDate>
      <guid>https://ittechnetworkk.github.io/about/</guid>
      <description>&lt;p&gt;COMING SOON&lt;/p&gt;</description>
    </item>
    <item>
      <title>GRE Over Ipsec</title>
      <link>https://ittechnetworkk.github.io/posts/greoveripsec/greoveripsec/</link>
      <pubDate>Fri, 22 Nov 2024 22:57:40 +0100</pubDate>
      <guid>https://ittechnetworkk.github.io/posts/greoveripsec/greoveripsec/</guid>
      <description>&lt;p&gt;Aşağıdaki topologiye göre ilerleyeceğim. Topolojideki cihazların interfacelerine IP adresleri verilmiştir.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://ittechnetworkk.github.io/images/greoveripsec/1.png&#34; alt=&#34;ipsec&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;GRE Config:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;R1:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;R1#conf t&#xA;R1(config)#int tunnel 1&#xA;R1(config-if)#ip addr 192.168.1.1 255.255.255.0&#xA;R1(config-if)#tunnel source e0/0&#xA;R1(config-if)#tunnel destination 200.59.25.2&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;R2:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;R1#conf t&#xA;R2(config)#int tunnel 1&#xA;R2(config-if)#ip addr 192.168.1.2 255.255.255.0&#xA;R2(config-if)#tunnel source e0/0&#xA;R2(config-if)#tunnel destination 197.53.15.2 &#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;IPsec:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;R1:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;R1(config)#crypto isakmp policy 10&#xA;R1(config-isakmp)#authentication pre-share               (define it later on)&#xA;R1(config-isakmp)#encryption aes&#xA;R1(config-isakmp)#group 14                               (must be over 14)&#xA;R1(config-isakmp)#hash sha&#xA;R1(config-isakmp)#exit&#xA;&#xA;R1(config)#crypto isakmp key BENIMCICIPAROLAM address 200.59.25.2   (pre-share key and next point IP)&#xA;&#xA;R1(config)#crypto ipsec transform-set AABBCC esp-aes esp-sha-hmac &#xA;R1(cfg-crypto-trans)#mode transport &#xA;R1(cfg-crypto-trans)#exit&#xA;&#xA;R1(config)#ip access-list extended GRE-IPSEC&#xA;R1(config-ext-nacl)#permit gre host 197.53.15.2 host 200.59.25.2     (src &amp;gt; dst)&#xA;R1(config-ext-nacl)#exit&#xA;&#xA;R1(config)#crypto map IPSEC-MAP 10 ipsec-isakmp &#xA;R1(config-crypto-map)#match address GRE-IPSEC&#xA;R1(config-crypto-map)#set peer 200.59.25.2&#xA;R1(config-crypto-map)#set transform-set AABBCC&#xA;R1(config-crypto-map)#exit&#xA;&#xA;R1(config)#int e0/0&#xA;R1(config-if)#crypto map IPSEC-MAP&#xA;R1(config-if)#end&#xA;R1#wr&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;R2:&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Juniper Rollback</title>
      <link>https://ittechnetworkk.github.io/posts/junosrollback/junos-rollback/</link>
      <pubDate>Fri, 22 Nov 2024 22:57:40 +0100</pubDate>
      <guid>https://ittechnetworkk.github.io/posts/junosrollback/junos-rollback/</guid>
      <description>&lt;p&gt;Rollback, cihazda yapılan önceki konfigürasyonlara dönebilmeyi sağlayan komuttur. Örneğin cihazda bir konfigürasyon yaptık ve commit ettik. Fakat yapılan konfigürasyon hatalıydı veya başka bir sebepten dolayı eski konfigürasyonu bir şekilde geri almamız gerekiyor. Bu durumda Rollback kullanılır.&lt;/p&gt;&#xA;&lt;p&gt;Rollback dosyalar 50 adettir, 0&amp;rsquo;dan başlar ve sıfırıncı dosya cihazda hali hazırda çalışan konfigürasyon dosyasıdır.&lt;/p&gt;&#xA;&lt;p&gt;Cihaz&amp;rsquo;da 49 Rollback dosyası olması halinde her commit işleminde 49. Rollback dosyasını uçurur.&lt;/p&gt;&#xA;&lt;p&gt;Rollback dosyalarını görmek için;&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;{master:0}[edit]&#xA;root@vqfx-re# rollback ?             &#xA;Possible completions:&#xA;  &amp;lt;[Enter]&amp;gt;            Execute this command&#xA;  0                    2024-10-07 02:20:28 UTC by root via cli &#xA;  1                    2024-10-07 02:20:20 UTC by root via cli &#xA;  2                    2024-10-07 02:20:19 UTC by root via cli &#xA;  3                    2024-10-07 02:20:18 UTC by root via cli &#xA;  4                    2024-10-07 02:20:17 UTC by root via cli &#xA;  5                    2024-10-07 02:19:57 UTC by root via cli &#xA;  6                    2024-10-07 02:19:37 UTC by root via cli &#xA;  7                    2024-10-07 02:19:34 UTC by root via cli &#xA;  8                    2024-10-07 02:12:37 UTC by root via cli &#xA;  9                    2020-08-19 17:30:33 UTC by root via cli &#xA;  10                   2020-08-19 17:22:59 UTC by root via other &#xA;  |                    Pipe through a command&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Yukarıda görüldüğü gibi, Rollback dosyalarının tarih, saat, kim tarafından, vs. bilgilerini görebiliyoruz. Sıfırıncı dosya çalışan konfigürasyon dosyasıdır.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Juniper Commit Usage</title>
      <link>https://ittechnetworkk.github.io/posts/junos-commit-usage/junos-commit-usage/</link>
      <pubDate>Fri, 22 Nov 2024 17:53:48 +0100</pubDate>
      <guid>https://ittechnetworkk.github.io/posts/junos-commit-usage/junos-commit-usage/</guid>
      <description>&lt;p&gt;JunOS sistemlerde bir diğer önemli konu ise Commit kullanımıdır.&lt;/p&gt;&#xA;&lt;p&gt;JunOS&amp;rsquo;da commit işlemi, yapılan konfigürasyonu etkinleştirmek için kullanılır. Yani yapılan konfigürasyonu commit etmezsek yaptığımız konfigürasyon geçerli olmaz.&lt;/p&gt;&#xA;&lt;p&gt;Bundan dolayı mutlaka konfigürasyon sonrası commit etmemiz gerekiyor.&lt;/p&gt;&#xA;&lt;p&gt;Commit işlemi yaparken bazı parametreler var ki işleri kolaylaştırır.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Commit tipleri:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;&amp;ldquo;commit&amp;rdquo;&lt;/strong&gt; : Bu komut, direkt olarak yapılan konfigürasyonu etkileştirir.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;&amp;ldquo;commit check&amp;rdquo;&lt;/strong&gt; : Bu komut, yapılan konfigürasyondan emin olmadığımız durumlarda, yapılan konfigürasyonun doğruluğunu kontrol eder. Eğer bir konfigürasyon hatası varsa bize ilgili kısmın hatasını gösterir.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Juniper CLI Help Komutları</title>
      <link>https://ittechnetworkk.github.io/posts/junosclihelpcommands/junos-cli-help-commands/</link>
      <pubDate>Sat, 16 Nov 2024 22:57:40 +0100</pubDate>
      <guid>https://ittechnetworkk.github.io/posts/junosclihelpcommands/junos-cli-help-commands/</guid>
      <description>&lt;p&gt;JunOS&amp;rsquo;da Cli yardım alma komutları oldukça detaylı ve kullanışlıdır. Junos sadece bir işletim sistemi değil aynı zamanda içinde bir kütüphanedir.&lt;/p&gt;&#xA;&lt;p&gt;JunOS&amp;rsquo;da birden fazla yardım alma komutu vardır ve her biri birbirinden kulanıcı dostudur.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Cli Help Komutları:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;root&amp;gt; help ?   &#xA;Possible completions:&#xA;  &amp;lt;[Enter]&amp;gt;            Execute this command&#xA;  apropos              Find help information about a topic&#xA;  reference            Reference material&#xA;  syslog               System log error messages&#xA;  tip                  Tip for the day&#xA;  topic                Help for high level topics&#xA;  |                    Pipe through a command&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Help komutlarıyla birlikte ne kullanılacağını &amp;ldquo;help ?&amp;rdquo; komutuyla görebiliriz.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Juniper Filtering Output</title>
      <link>https://ittechnetworkk.github.io/posts/junosfilteringoutput/junos-filtering-output/</link>
      <pubDate>Sat, 16 Nov 2024 22:57:40 +0100</pubDate>
      <guid>https://ittechnetworkk.github.io/posts/junosfilteringoutput/junos-filtering-output/</guid>
      <description>&lt;p&gt;JunOS işletim sisteminde çıktıları filtrelemek çoğu zaman hayat kurtarır. JunOS&amp;rsquo;da bazı çıktılar çok uzun olabiliyor, bu çıktıları filtrelemek amacımıza ulaşmak için zamandan tasarruf sağlıyor.&lt;/p&gt;&#xA;&lt;p&gt;JunOS FreeBSD tabanlı olduğu için Linux işletim sistemi bilenler için komutlara aşağı yukarı aşinalık gösterir.&lt;/p&gt;&#xA;&lt;p&gt;Linux bilen JunOS&amp;rsquo;da ve benzeri sistemlerde bir şekilde yolunu bulur.&lt;/p&gt;&#xA;&lt;p&gt;Çıktıları filtrelemek JunOS&amp;rsquo;da oldukça kolaydır. Aşağıdaki filtreleme komutlarını ve açıklamalarını görebilirsiniz.&lt;/p&gt;&#xA;&lt;p&gt;Çıktıları filtrelemek için temel olarak pipe &amp;ldquo;|&amp;rdquo; komutu ve devamında amaca uygun komutu kullanmak işi çözecektir.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Juniper Shortcuts</title>
      <link>https://ittechnetworkk.github.io/posts/junosshortcuts/junos-shortcuts/</link>
      <pubDate>Sat, 16 Nov 2024 17:53:48 +0100</pubDate>
      <guid>https://ittechnetworkk.github.io/posts/junosshortcuts/junos-shortcuts/</guid>
      <description>&lt;p&gt;Junos Shortcuts, JunOS CLI ekranında bize pratiklik sağlayan kısayollardır. Başlıcaları aşağıdaki gibidir.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;CTRL + b:&#xA;İmleci bir karakter sola kaydırır.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;CTRL + f:&#xA;İmleci bir karakter sağa kaydırır.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;CTRL + a:&#xA;İmleci satır en başına getirir.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;CTRL + e:&#xA;İmleci satırın en sonuna getirir.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;CTRL + d:&#xA;İmlecin sağından bir karakter siler.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;CTRL + k:&#xA;İmlecin sağındaki her şeyi siler.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;CTRL + u:&#xA;Tüm satırı siler.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;CTRL + w:&#xA;İmlecin solundan bir kelime/komut siler.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Network Troubleshooting</title>
      <link>https://ittechnetworkk.github.io/posts/networktroubleshooting/network-troubleshooting/</link>
      <pubDate>Sun, 28 Jul 2024 22:57:40 +0100</pubDate>
      <guid>https://ittechnetworkk.github.io/posts/networktroubleshooting/network-troubleshooting/</guid>
      <description>&lt;p&gt;İlk olarak eğer hatanın nereden kaynaklandığını az çok tahmin edebiliyorsak ilk o noktaya yoğunlaşmakta fayda olacağını düşünüyorum diyerek başlamak istiyorum.&lt;/p&gt;&#xA;&lt;p&gt;Network&amp;rsquo;te bir sorunu çözerken yaklaşımımızın adım adım olacak şekilde ilk olarak en yakınımızdaki cihaz veya uygulama veya katman olmalıdır.&lt;/p&gt;&#xA;&lt;p&gt;Peki ne demek istiyorum?&lt;/p&gt;&#xA;&lt;p&gt;Aşağıda örnek bir senaryom var. Bu senaryoda PC1 İnternete erişemediğini varsayalım.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://ittechnetworkk.github.io/images/network-troubleshooting/1.png&#34; alt=&#34;troubleshooting&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Buradaki senaryomda, PC&amp;rsquo;nin bütün ayarlarını gözden geçirdikten sonra yani PC&amp;rsquo;nin Ethernet kablosu, IP Adres, Default Gateway, DNS gibi.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Temel Switch Konfigürasyonu</title>
      <link>https://ittechnetworkk.github.io/posts/switchconfiguration/switch-conf/</link>
      <pubDate>Wed, 26 Jun 2024 17:53:48 +0100</pubDate>
      <guid>https://ittechnetworkk.github.io/posts/switchconfiguration/switch-conf/</guid>
      <description>&lt;p&gt;Merhaba, bu yazıda Cisco bir Switch&amp;rsquo;in temel bir konfigürasyonunu göstereceğim.&lt;/p&gt;&#xA;&lt;p&gt;Tabi bu konfigürasyonları temel düzelde uygulayacağım, daha kapsamlı konfigürasyon network yapılarına göre, kullanılan teknolojilere göre değişiklik gösterecektir.&lt;/p&gt;&#xA;&lt;p&gt;Uygulayacağım konfigürasyonları sırasıyla aşağıdaki gibi olacaktır:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Hostname,&lt;/li&gt;&#xA;&lt;li&gt;Zaman Konfigürasyonu,&lt;/li&gt;&#xA;&lt;li&gt;Yanlış Girilen Parola Politikası,&lt;/li&gt;&#xA;&lt;li&gt;Enable Password,&lt;/li&gt;&#xA;&lt;li&gt;Banner motd,&lt;/li&gt;&#xA;&lt;li&gt;Kullanıcı Oluşturma,&lt;/li&gt;&#xA;&lt;li&gt;Console Erişimi,&lt;/li&gt;&#xA;&lt;li&gt;SSH Konfigürasyonu,&lt;/li&gt;&#xA;&lt;li&gt;Default Gateway,&lt;/li&gt;&#xA;&lt;li&gt;Disable Ports,&lt;/li&gt;&#xA;&lt;li&gt;Konfigürasyonları Kaydetme,&lt;/li&gt;&#xA;&lt;li&gt;Kontrol.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;Başlayalım.&lt;/p&gt;&#xA;&lt;p&gt;Ben konfigürasyonları, Cisco Catalyst 2960 Serisi bir Switch üzerinde uygulayacağım.&lt;/p&gt;&#xA;&lt;p&gt;Console Kablosu  ve Switch görüntü itibariyle aşağıdaki gibidir.&lt;/p&gt;</description>
    </item>
    <item>
      <title>IPv6 Static Routing</title>
      <link>https://ittechnetworkk.github.io/posts/ipv6staticrouting/ipv6-static-routing/</link>
      <pubDate>Tue, 25 Jun 2024 22:57:40 +0100</pubDate>
      <guid>https://ittechnetworkk.github.io/posts/ipv6staticrouting/ipv6-static-routing/</guid>
      <description>&lt;p&gt;Static Route hedefe gitmek için manuel olarak yazılan rotadır. Static Route küçük networkler için kullanılabilir. Fakat orta ve büyük networklerde iş yükünü fazlaca artırabilir.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://ittechnetworkk.github.io/images/ipv6-static-routing/1.png&#34; alt=&#34;routing&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Bu da diğer Dynamic Routing protokollerinden ayıran bir özelliğidir. Bu demektir ki bir networkte Dynamic Routing Protokolü çalışsa bile öncelik statik olarak yazılan rotadadır.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Static Route Yazımı:&lt;/strong&gt;&#xA;Statik rota yazmak oldukça kolaydır. Aşağıda 2 farklı yazımı görebilirsiniz. İkisi de kullanılabilir.&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Router(config)#ipv6 route 2001:3::/64 2001:2::2&#xA;Router(config)#ipv6 route 2001:3::/64 gi0/1&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Bunun anlamı; &lt;em&gt;&lt;strong&gt;2001:3::/64&lt;/strong&gt;&lt;/em&gt; networküne gitmek için &lt;em&gt;&lt;strong&gt;2001:2::2&lt;/strong&gt;&lt;/em&gt; yolunu kullan.&#xA;veya yine &lt;em&gt;&lt;strong&gt;2001:3::/64&lt;/strong&gt;&lt;/em&gt; networküne gitmek için &lt;em&gt;&lt;strong&gt;gi0/1&lt;/strong&gt;&lt;/em&gt; interfacesini kullan.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Raspberry Pi e-Paper Projesi</title>
      <link>https://ittechnetworkk.github.io/posts/epaper/raspberry-pi-epaper/</link>
      <pubDate>Tue, 25 Jun 2024 22:57:40 +0100</pubDate>
      <guid>https://ittechnetworkk.github.io/posts/epaper/raspberry-pi-epaper/</guid>
      <description>&lt;p&gt;Merhabalar, bu yazıda Raspbery Pi Zero kullanarak anlık olarak Saati, Tarihi, IP bilgisini, Hostname&amp;rsquo;i ve Download/Upload değerlerini gösteren bir proje yapacağım.&lt;/p&gt;&#xA;&lt;p&gt;Bu proje için Raspberry Pi Zero&amp;rsquo;ya uygun 2.13Inch bir e-Paper Display kullanacağım.&lt;/p&gt;&#xA;&lt;p&gt;Kullanacağım donanım ve yazılımlar aşağıdaki gibidir.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Raspberry Pi Zero,&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://de.aliexpress.com/item/33005909532.html?spm=a2g0o.order_list.order_list_main.148.42cd5c5fmmGynP&amp;amp;gatewayAdapt=glo2deu&#34;&gt;2.13 Inch E-Paper Display&lt;/a&gt;,&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.amazon.com/-/de/dp/B09JZH16WH/ref=sr_1_3?__mk_de_DE=%C3%85M%C3%85%C5%BD%C3%95%C3%91&amp;amp;sr=8-3&#34;&gt;3.7V 1000mah UPS&lt;/a&gt;,&lt;/li&gt;&#xA;&lt;li&gt;SD Card,&lt;/li&gt;&#xA;&lt;li&gt;Card Reader,&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.raspberrypi.com/software/&#34;&gt;Raspberry Pi Imager&lt;/a&gt;,&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://de.aliexpress.com/item/1005005924842887.html?spm=a2g0o.order_list.order_list_main.183.42cd5c5fmmGynP&amp;amp;gatewayAdapt=glo2deu&#34;&gt;Ve birkaç vida&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Donanımlar görüntü itibariyle aşağıdaki gibidir:&#xA;&lt;img src=&#34;https://ittechnetworkk.github.io/images/EPaper/hardware.jpg&#34; alt=&#34;raspberrypi&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;İlk olarak Raspberry Pi Imager kullanarak işletim sistemini SD Kart&amp;rsquo;a yazdıracağım&lt;/p&gt;</description>
    </item>
    <item>
      <title>Cisco Router Parola Sıfırlama</title>
      <link>https://ittechnetworkk.github.io/posts/ciscorouterpasswordrocovery/cisco-router-parola-sifirlama/</link>
      <pubDate>Sun, 09 Jun 2024 22:57:40 +0100</pubDate>
      <guid>https://ittechnetworkk.github.io/posts/ciscorouterpasswordrocovery/cisco-router-parola-sifirlama/</guid>
      <description>&lt;p&gt;Cisco Router ve Switch&amp;rsquo;lerde unutulan parolayı cihazı fabrika ayarlarına döndürmeden nasıl sıfırlayabiliriz?&#xA;Cisco cihazlarda unutulan parolayı, konfigürasyonu bozmadan sıfırlamak mümkün. Bu işlem birkaç adımda yapılır.&#xA;Ben bu uygulamayı elimde bulunan Cisco 800 Serisi bir Router&amp;rsquo;da adım adım uygulayacağım.&#xA;Cihaz şekilde görüldüğü gibidir.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://ittechnetworkk.github.io/images/CiscoRouterPasswordRocovery/1.jpg&#34; alt=&#34;router&#34;&gt;&#xA;CiscoRouterPasswordRocovery&lt;/p&gt;&#xA;&lt;p&gt;İlk olarak Console Portundan cihaza bağlanıyorum.&lt;/p&gt;&#xA;&lt;p&gt;Cihaz&amp;rsquo;a güç verdikten hemen sonra, cihaz açılış aşamasındayken &amp;ldquo;&lt;code&gt;CTRL+BREAK&lt;/code&gt;&amp;rdquo; tuşlarına basarak &amp;ldquo;&lt;code&gt;Rommon&lt;/code&gt;&amp;rdquo; moduna geçiyorum.&lt;/p&gt;&#xA;&lt;p&gt;Her terminal programında farklılık gösterebilir. Örneğin ben minicom kullanıyorum ve açılırken &amp;ldquo;&lt;code&gt;CTRL + A + F&lt;/code&gt;&amp;rdquo; tuş kombinasyonlarını kullanarak &amp;ldquo;&lt;code&gt;BREAK&lt;/code&gt;&amp;rdquo; sinyali gönderebiliyorum.&lt;/p&gt;</description>
    </item>
    <item>
      <title>GRE Tunnel</title>
      <link>https://ittechnetworkk.github.io/posts/gretunnel/gre-tunnel/</link>
      <pubDate>Fri, 07 Jun 2024 17:53:48 +0100</pubDate>
      <guid>https://ittechnetworkk.github.io/posts/gretunnel/gre-tunnel/</guid>
      <description>&lt;p&gt;GRE(Generic Routing Encapsulation) Protokolü, paketin kaynaktan hedefe, oluşturulan tünel sayesinde iletilmesini sağlayan protokoldür.&#xA;GRE, Cisco tarafından geliştirilmiştir.&#xA;GRE kullanarak birden fazla şubesi olan networkler birleştirilebilir.&#xA;Fakat oluşturulan tünelden iletilen paketler okunabilir şekilde iletilir. Yani araya girip trafik dinlenirse, paketler okunabilir. Bu tünel daha sonra güvenli hale de getirilebilir.&#xA;GRE, IP paketini kapsüle ederek yönlendirme yapar.&#xA;Enkapsülasyon yapılırken IP başlığına(20), 4 Byte GRE başlık bilgisi eklenir.&lt;/p&gt;&#xA;&lt;p&gt;Aşağıdaki GRE Lab Topolojisini uygulayacağım.&lt;/p&gt;</description>
    </item>
    <item>
      <title>İkili Yığın Yöntemi</title>
      <link>https://ittechnetworkk.github.io/posts/ikiliyiginyontemi/ikili-yigin-yontemi/</link>
      <pubDate>Thu, 06 Jun 2024 22:57:40 +0100</pubDate>
      <guid>https://ittechnetworkk.github.io/posts/ikiliyiginyontemi/ikili-yigin-yontemi/</guid>
      <description>&lt;p&gt;Bu yöntem, IPv4&amp;rsquo;den IPv6&amp;rsquo;ya geçiş yöntemlerinden biri olan tünelleme tekniğidir. Bu yöntemde, cihazların hem IPv4 hem de IPv6 adreslerini birlikte kullanması yöntemidir.&#xA;Yani IPv4 ile gelen cihaz IPv4, IPv6 ile gelen cihaz IPv6 ile haberleşir.&lt;/p&gt;&#xA;&lt;p&gt;Uygulamada daha net anlaşılacaktır.&lt;/p&gt;&#xA;&lt;p&gt;Aşağıdaki topolojiyi uygulayacağım.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://ittechnetworkk.github.io/images/IkiliYiginYontemi/1.png&#34; alt=&#34;ipv6&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Yapılacaklar:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Router ve VPC&amp;rsquo;lerin Interface&amp;rsquo;lerine IPv4 ve IPv6 adreslerini tanımla,&lt;/li&gt;&#xA;&lt;li&gt;Networklerin birbirleriyle haberleşmesi için statik rotalar yaz,&lt;/li&gt;&#xA;&lt;li&gt;Test et.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;strong&gt;1. Router ve VPC&amp;rsquo;lerin Interface&amp;rsquo;lerine IPv4 ve IPv6 adreslerini tanımla,&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>DHCPv6</title>
      <link>https://ittechnetworkk.github.io/posts/dhcpv6/dhcpv6/</link>
      <pubDate>Fri, 31 May 2024 22:57:40 +0100</pubDate>
      <guid>https://ittechnetworkk.github.io/posts/dhcpv6/dhcpv6/</guid>
      <description>&lt;p&gt;DHCP(Dynamic Host Configuration Protocol), bir networkteki bir cihaza IP, DNS, Default Gateway parametrelerini dağıtan servistir. Yani networkteki bir cihazın başka bir cihaz ile konuşmasını sağlayacak parametlereleri dağıtan servistir.&#xA;DHCPv6, DHCPv4&amp;rsquo;den bazı özellikleriyle ayrılıyor. DHCPv6 2 şekilde yapılandırılabilir.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Stateful(Durumlu) DHCPv6,&lt;/li&gt;&#xA;&lt;li&gt;Stateless SLAAC (Durumsuz) DHCPv6&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Stateful DHCPv6 tıpkı DHCPv4 gibi, bir DHCP server üzerinden parametreleri dağıtmaktır.&lt;/p&gt;&#xA;&lt;p&gt;Stateless SLAAC DHCPv6 da ise herhangi bir DHCP server olmaksızın cihazların Router üzerinden IPv6 parametrelerini alıp otomatik olarak kendini yapılandırmasıdır.&lt;/p&gt;</description>
    </item>
    <item>
      <title>IPv4 IPv6 Tünelleme</title>
      <link>https://ittechnetworkk.github.io/posts/ipv4ipv6tunelleme/ipv4-ipv6-tunelleme/</link>
      <pubDate>Fri, 31 May 2024 22:57:40 +0100</pubDate>
      <guid>https://ittechnetworkk.github.io/posts/ipv4ipv6tunelleme/ipv4-ipv6-tunelleme/</guid>
      <description>&lt;p&gt;Bu yöntem, IPv4&amp;rsquo;den IPv6&amp;rsquo;ya geçiş yöntemlerinden biri olan tünelleme tekniğidir. Bu yöntemde, IPv6 networkleri IPv4 üzerinden tünellenerek birbirleriyle haberleşirler. IPv4-IPv6 geçiş aşamalarında kullanılabilecek bu yöntemin yanı sıra Dual Stack, Translation yöntemleri de vardır.&lt;/p&gt;&#xA;&lt;p&gt;IPv4-IPv6 Tünelleme tekniği için aşağıdaki topolojiyi uygulayacağım.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://ittechnetworkk.github.io/images/Ipv4Ipv6Tunelleme/1.png&#34; alt=&#34;ipv6&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Yapılacaklar:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Interfacelere IP ver.&lt;/li&gt;&#xA;&lt;li&gt;Sırasıyla tunnel oluştur.&lt;/li&gt;&#xA;&lt;li&gt;Statik route yazarak networkleri haberleştir.&lt;/li&gt;&#xA;&lt;li&gt;Test&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;strong&gt;1. Interfacelere IP ver.&lt;/strong&gt;&#xA;&lt;strong&gt;R1:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;R1#configure terminal &#xA;R1(config)#int e0/0&#xA;R1(config-if)#ip addr 192.168.3.2 255.255.255.0&#xA;R1(config-if)#no sh&#xA;R1(config-if)#int e0/1&#xA;R1(config-if)#ip addr 192.168.1.1 255.255.255.0&#xA;R1(config-if)#no sh&#xA;R1(config-if)#int loopback 0&#xA;R1(config-if)#ipv6 addr 2001:1::1/64&#xA;R1(config-if)#no sh&#xA;R1(config-if)#exit&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;R2:&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>PPP Multilink Konfigürasyonu</title>
      <link>https://ittechnetworkk.github.io/posts/pppmultilink/ppp-multilink/</link>
      <pubDate>Sun, 14 Apr 2024 22:57:40 +0100</pubDate>
      <guid>https://ittechnetworkk.github.io/posts/pppmultilink/ppp-multilink/</guid>
      <description>&lt;p&gt;PPP Multilink, routerlar arasındaki birden fazla fiziksel bağlantıyı tek bir mantıksal bağlantı yapmak amacıyla kullanılır.&#xA;Bazı özellikleri:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Yük Dengeleme,&lt;/li&gt;&#xA;&lt;li&gt;Bant Genişliğinin Artırılması,&lt;/li&gt;&#xA;&lt;li&gt;Verimlilik,&lt;/li&gt;&#xA;&lt;li&gt;Yedeklilik.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;Multilink PPP LAB:&lt;/strong&gt;&#xA;Aşağıdaki basit yapıyı konfigüre edeceğim.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://ittechnetworkk.github.io/images/ppp-multilink/1.png&#34; alt=&#34;ppp&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Bu yapıda serial 4 kablo ile bağlanmış iki router var. R1 ile başlayalım.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;R1:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;R1#conf t&#xA;R1(config)#interface multilink 1&#xA;R1(config-if)#ip addr 10.0.0.1 255.255.255.0&#xA;R1(config-if)#no sh&#xA;R1(config-if)#ppp multilink&#xA;R1(config-if)#ppp multilink group 1&#xA;R1(config-if)#exit&#xA;&#xA;R1(config)#int ser0/0&#xA;R1(config-if)#encapsulation ppp&#xA;R1(config-if)#ppp multilink &#xA;R1(config-if)#ppp multilink group 1  &#xA;R1(config-if)#no sh&#xA;&#xA;R1(config-if)#int ser0/1&#xA;R1(config-if)#encapsulation ppp&#xA;R1(config-if)#ppp multilink&#xA;R1(config-if)#ppp multilink group 1&#xA;R1(config-if)#no sh&#xA;&#xA;R1(config-if)#int ser0/2&#xA;R1(config-if)#encapsulation ppp&#xA;R1(config-if)#ppp multilink&#xA;R1(config-if)#ppp multilink group 1&#xA;R1(config-if)#no sh&#xA;&#xA;R1(config-if)#int ser0/3&#xA;R1(config-if)#encapsulation ppp&#xA;R1(config-if)#ppp multilink&#xA;R1(config-if)#ppp multilink group 1&#xA;R1(config-if)#no sh&#xA;R1(config-if)#exit&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;R2:&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>OSPF Authentication</title>
      <link>https://ittechnetworkk.github.io/posts/ospfauthentication/ospf-authentication/</link>
      <pubDate>Sun, 31 Mar 2024 22:57:40 +0100</pubDate>
      <guid>https://ittechnetworkk.github.io/posts/ospfauthentication/ospf-authentication/</guid>
      <description>&lt;p&gt;OSPF Authentication, OSPF network trafiğinin güvenliğini artırmak amacıyla kullanılır.&#xA;3 Çeşit doğrulama yöntemi vardır;&lt;/p&gt;&#xA;&lt;p&gt;1- Plain Text Authentication,&lt;/p&gt;&#xA;&lt;p&gt;2- MD5 Authentication,&lt;/p&gt;&#xA;&lt;p&gt;3- SHA-HMAC Authentication (IOS 15.4 ve sonrası versiyonlar için)&lt;/p&gt;&#xA;&lt;p&gt;Aşağıdaki topolojiyi uygulayacağız.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://ittechnetworkk.github.io/images/ospf-authentication/1.png&#34; alt=&#34;ospf&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Bu topolojide 3 Authentication metodunu da uygulayacağız.&lt;/p&gt;&#xA;&lt;p&gt;R1 ve R3 arasında Plain Text Authentication (Area 1),&lt;/p&gt;&#xA;&lt;p&gt;R1 ve R2 arasında MD5 Authentication (Area 0),&lt;/p&gt;&#xA;&lt;p&gt;R2 ve R4 arasında SHA-HMAC Authentication yapacağız. (Area 2)&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;1- Interfacelere IP vererek başlayalım:&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>EtherChannel</title>
      <link>https://ittechnetworkk.github.io/posts/etherchannel/etherchannel/</link>
      <pubDate>Fri, 22 Mar 2024 22:57:40 +0100</pubDate>
      <guid>https://ittechnetworkk.github.io/posts/etherchannel/etherchannel/</guid>
      <description>&lt;p&gt;EtherChannel Protokolü switchlerin birden fazla fiziksel portunu tek bir mantıksal port yapan protokoldür. Yapılmasının amacı şudur örneğin iki switch arasına 4 kablo çekip bırakırsak Stp (Spanning Tree Protocol) devreye girecek ve bu portlardan bazılarını kapatacaktır loop&amp;rsquo;u engellemek için. Eğer EtherChannel yaparsak bu portlar tek bir mantıksal port gibi görünecektir ve STP&amp;rsquo;ye gerek kalmayacaktır. Konfigüre etmek için karşılıklı portların yapısı aynı olmalıdır. Örneğin bir taraf GigabitEthernet diğeri FastEthernet olamaz.&#xA;3 EtherChannel Protokolü vardır:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
